name: Publish

on:
  release:
    types: [published]

jobs:
  build_sdist:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade setuptools

      - name: Create packages
        run: python setup.py sdist

      - uses: actions/upload-artifact@v1
        with:
          name: python_packages
          path: dist

  build_wheel_linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image:
          - quay.io/pypa/manylinux1_i686
          - quay.io/pypa/manylinux1_x86_64
          - quay.io/pypa/manylinux2010_x86_64
          # - quay.io/pypa/manylinux2014_x86_64
    steps:
      - uses: actions/checkout@v2

      - name: Pull Docker images
        run: docker pull ${{ matrix.image }}

      - name: Build ${{ matrix.image }} wheel
        run: |
          cat <<'EOF' | docker run --rm -i -v $PWD:/app ${{ matrix.image }}
            for pybin in /opt/python/*/bin; do
                "$pybin/python" -m pip wheel /app/ -w /app/dist
            done

            for whl in /app/dist/*.whl; do
                auditwheel repair "$whl" -w /app/dist/wheelhouse
            done
          EOF

      - uses: actions/upload-artifact@v1
        with:
          name: python_packages
          path: dist/wheelhouse

  build_wheel_macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: python setup.py bdist_wheel

      # - name: Delocate for macOS wheels
      #   run: |
      #     python -m pip install --upgrade delocate
      #     delocate-addplat --rm-orig \
      #       -p macosx_10_15_x86_64 \
      #       -p macosx_10_14_x86_64 \
      #       -p macosx_10_13_x86_64 \
      #       -p macosx_10_12_x86_64 \
      #       -p macosx_10_11_x86_64 \
      #       -p macosx_10_10_x86_64 \
      #       dist/*.whl

      - uses: actions/upload-artifact@v1
        with:
          name: python_packages
          path: dist

  build_wheel_windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8']
        arch: ['x86', 'x64']
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }} (${{ matrix.arch }})
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          arch: ${{ matrix.arch }}

      # Install Microsoft Visual C++ Compiler for Python 2.7
      # http://aka.ms/vcpython27
      - name: Install MSVC++ for Python 2.7
        run: choco install vcpython27 --yes
        if: matrix.python-version == '2.7'

      # jump/jump.c(2) : fatal error C1083: Cannot open include file: 'stdint.h': No such file or directory
      - name: Copy header files from Visual Studio 14.0
        run: iwr https://raw.githubusercontent.com/mattn/gntp-send/master/include/msinttypes/stdint.h -OutFile 'C:\Program Files (x86)\Common Files\Microsoft\Visual C++ for Python\9.0\VC\include\stdint.h'
        if: matrix.python-version == '2.7'

      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel

      - name: Build wheel
        run: python setup.py bdist_wheel

      - uses: actions/upload-artifact@v1
        with:
          name: python_packages
          path: dist

  publish:
    needs:
      - build_sdist
      - build_wheel_linux
      - build_wheel_macos
      - build_wheel_windows
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v1
        with:
          name: python_packages
          path: dist

      - name: Show result
        run: ls -l dist

      - name: Publish packages to TestPyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
